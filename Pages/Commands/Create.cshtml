@page
@model CreateModel
@using RatesParsingWeb.App_Code;
@{
    ViewData["Title"] = "Создать команду";
}

<h1>Создать команду</h1>
<hr />
@if (Model.ValidationErrors != null)
{
    <div class="text-danger">Ошибки при обновлении данных:</div>
    @Html.CreteErrorList(Model.ValidationErrors);
}
<div class="row">
    <form method="post">
        <div class="form-group">
            <label asp-for="CommandModel.Name" class="control-label"></label>
            <select asp-for="CommandModel.Name" class="form-control" asp-items="@Model.CommandSelectList"></select>
            <span asp-validation-for="CommandModel.Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" asp-page-handler="Command" value="Выбрать" class="btn btn-primary" />
        </div>

        @if (Model.CommandModel != null)
        {
            <h4>Описание команды</h4>
            @Html.DisplayFor(model => model.CommandModel.Description)

            <h4>Параметры команды</h4>
            @if (Model.CommandModel.CommandParameters != null)
            {
                @foreach (var parameter in Model.CommandModel.CommandParameters)
                {
                    <div>
                        <span class="font-weight-bold">@Html.DisplayFor(model => parameter.Name)</span>: @Html.DisplayFor(model => parameter.Description)
                    </div>
                }
            }
            else
            {
                <div>
                    Параметры отсутствуют
                </div>
            }

            <div class="form-group">
                <input type="submit" asp-page-handler="" value="Создать" class="btn btn-primary" />
            </div>
        }
    </form>
</div>
<div>
    <a asp-page="./Index">К списку команд</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}